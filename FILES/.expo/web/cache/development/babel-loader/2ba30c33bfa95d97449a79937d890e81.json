{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\migue\\\\Desktop\\\\AppMoviles\\\\S6IconsConceptsTouchable\\\\UserProfile.js\";\n\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nexport var UserProfile = function UserProfile(props) {\n  var data = props.data;\n\n  var _React$useState = React.useState(\"\"),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      text = _React$useState2[0],\n      onChangeText = _React$useState2[1];\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isFocus = _useState2[0],\n      setIsFocus = _useState2[1];\n\n  var _onFocus = function onFocus() {\n    setIsFocus(!isFocus);\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }\n  }, React.createElement(Image, {\n    source: {\n      uri: data.image\n    },\n    style: styles.imageIcon,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }\n  }), React.createElement(TextInput, {\n    style: styles.textInput,\n    placeholder: \"What's your dog doing?\",\n    clearTextOnFocus: true,\n    multiline: true,\n    numberOfLines: 2,\n    maxLength: 80,\n    textBreakStrategy: \"balanced\",\n    onChangeText: onChangeText,\n    value: text,\n    onFocus: function onFocus() {\n      return _onFocus();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  })), React.createElement(View, {\n    style: styles.button,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  }, isFocus ? React.createElement(Button, {\n    title: \"Post\",\n    onPress: function onPress() {\n      return Alert.alert('Simple Button pressed');\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 19\n    }\n  }) : null));\n};\nvar styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    paddingTop: 15,\n    paddingBottom: 15\n  },\n  textInput: {\n    fontFamily: 'sans-serif-light',\n    fontSize: 15,\n    width: 330,\n    color: 'black'\n  },\n  imageIcon: {\n    marginLeft: 5,\n    marginRight: 5,\n    width: 30,\n    height: 30,\n    borderRadius: 40\n  },\n  button: {\n    borderBottomColor: 'grey',\n    borderBottomWidth: 2\n  }\n});","map":{"version":3,"sources":["C:/Users/migue/Desktop/AppMoviles/S6IconsConceptsTouchable/UserProfile.js"],"names":["React","useState","UserProfile","props","data","text","onChangeText","isFocus","setIsFocus","onFocus","styles","container","uri","image","imageIcon","textInput","button","Alert","alert","StyleSheet","create","flexDirection","alignItems","paddingTop","paddingBottom","fontFamily","fontSize","width","color","marginLeft","marginRight","height","borderRadius","borderBottomColor","borderBottomWidth"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;;;;;;AAGA,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,KAAD,EAAW;AAEpC,MAAMC,IAAI,GAAGD,KAAK,CAACC,IAAnB;;AAFoC,wBAIPJ,KAAK,CAACC,QAAN,CAAe,EAAf,CAJO;AAAA;AAAA,MAI7BI,IAJ6B;AAAA,MAIvBC,YAJuB;;AAAA,kBAMNL,QAAQ,CAAC,KAAD,CANF;AAAA;AAAA,MAM7BM,OAN6B;AAAA,MAMpBC,UANoB;;AAQpC,MAAMC,QAAO,GAAG,SAAVA,OAAU,GAAK;AACnBD,IAAAA,UAAU,CAAC,CAACD,OAAF,CAAV;AACD,GAFD;;AAIA,SACE,0CACA,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEG,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AACE,IAAA,MAAM,EAAE;AAAEC,MAAAA,GAAG,EAAER,IAAI,CAACS;AAAZ,KADV;AAEE,IAAA,KAAK,EAAEH,MAAM,CAACI,SAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAKE,oBAAC,SAAD;AACE,IAAA,KAAK,EAAEJ,MAAM,CAACK,SADhB;AAEE,IAAA,WAAW,EAAC,wBAFd;AAGE,IAAA,gBAAgB,EAAE,IAHpB;AAIE,IAAA,SAAS,MAJX;AAKE,IAAA,aAAa,EAAE,CALjB;AAME,IAAA,SAAS,EAAE,EANb;AAOE,IAAA,iBAAiB,EAAC,UAPpB;AAQE,IAAA,YAAY,EAAET,YARhB;AASE,IAAA,KAAK,EAAED,IATT;AAUE,IAAA,OAAO,EAAE;AAAA,aAAMI,QAAO,EAAb;AAAA,KAVX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,CADA,EAmBA,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEC,MAAM,CAACM,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACIT,OAAO,GAAG,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,MAAd;AAAqB,IAAA,OAAO,EAAE;AAAA,aAAMU,KAAK,CAACC,KAAN,CAAY,uBAAZ,CAAN;AAAA,KAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAH,GACG,IAFd,CAnBA,CADF;AA0BD,CAtCM;AAwCP,IAAMR,MAAM,GAAGS,UAAU,CAACC,MAAX,CAAkB;AAC/BT,EAAAA,SAAS,EAAE;AACTU,IAAAA,aAAa,EAAE,KADN;AAETC,IAAAA,UAAU,EAAE,QAFH;AAGTC,IAAAA,UAAU,EAAE,EAHH;AAITC,IAAAA,aAAa,EAAE;AAJN,GADoB;AAO/BT,EAAAA,SAAS,EAAC;AACRU,IAAAA,UAAU,EAAE,kBADJ;AAERC,IAAAA,QAAQ,EAAE,EAFF;AAGRC,IAAAA,KAAK,EAAE,GAHC;AAIRC,IAAAA,KAAK,EAAE;AAJC,GAPqB;AAa/Bd,EAAAA,SAAS,EAAC;AACRe,IAAAA,UAAU,EAAE,CADJ;AAERC,IAAAA,WAAW,EAAE,CAFL;AAGRH,IAAAA,KAAK,EAAE,EAHC;AAIRI,IAAAA,MAAM,EAAC,EAJC;AAKRC,IAAAA,YAAY,EAAE;AALN,GAbqB;AAoB/BhB,EAAAA,MAAM,EAAE;AACNiB,IAAAA,iBAAiB,EAAE,MADb;AAENC,IAAAA,iBAAiB,EAAE;AAFb;AApBuB,CAAlB,CAAf","sourcesContent":["import React, {useState} from 'react';\r\nimport { StyleSheet, View, Image, TextInput, Button } from 'react-native';\r\n\r\nexport const UserProfile = (props) => {\r\n  \r\n  const data = props.data; \r\n\r\n  const [text, onChangeText] = React.useState(\"\");\r\n  \r\n  const [isFocus, setIsFocus] = useState(false);\r\n\r\n  const onFocus = () =>{\r\n    setIsFocus(!isFocus)\r\n  }\r\n  \r\n  return(\r\n    <>\r\n    <View style={styles.container}>\r\n      <Image \r\n        source={{ uri: data.image }}\r\n        style={styles.imageIcon}\r\n      />\r\n      <TextInput \r\n        style={styles.textInput}\r\n        placeholder=\"What's your dog doing?\"\r\n        clearTextOnFocus={true}\r\n        multiline\r\n        numberOfLines={2}\r\n        maxLength={80}\r\n        textBreakStrategy='balanced'\r\n        onChangeText={onChangeText}\r\n        value={text}\r\n        onFocus={() => onFocus()}\r\n      />\r\n    </View>\r\n    <View style={styles.button}>\r\n      { isFocus ? <Button title=\"Post\" onPress={() => Alert.alert('Simple Button pressed')} />  \r\n                : null }\r\n    </View>\r\n    </>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    paddingTop: 15,\r\n    paddingBottom: 15\r\n  },\r\n  textInput:{\r\n    fontFamily: 'sans-serif-light',\r\n    fontSize: 15,\r\n    width: 330,\r\n    color: 'black', \r\n  },\r\n  imageIcon:{\r\n    marginLeft: 5,\r\n    marginRight: 5,\r\n    width: 30, \r\n    height:30,\r\n    borderRadius: 40,\r\n  },\r\n  button: {\r\n    borderBottomColor: 'grey',\r\n    borderBottomWidth: 2,\r\n  }\r\n});"]},"metadata":{},"sourceType":"module"}